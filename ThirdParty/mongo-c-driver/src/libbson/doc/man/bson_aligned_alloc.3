.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "BSON_ALIGNED_ALLOC" "3" "Aug 31, 2022" "1.23.0" "libbson"
.SH NAME
bson_aligned_alloc \- bson_aligned_alloc()
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
void *
bson_aligned_alloc (size_t alignment, size_t num_bytes);
.ft P
.fi
.UNINDENT
.UNINDENT
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBalignment\fP: The alignment of the allocated bytes of memory. Must be a power of 2 and a multiple of \fBsizeof (void *)\fP\&.
.IP \(bu 2
\fBnum_bytes\fP: The number of bytes to allocate. Must be a multiple of \fBalignment\fP\&.
.UNINDENT
.SH DESCRIPTION
.sp
This is a portable \fBaligned_alloc()\fP wrapper.
.sp
In general, this function will return an allocation at least \fBsizeof(void*)\fP bytes or bigger with an alignment of at least \fBalignment\fP\&.
.sp
If there was a failure to allocate \fBnum_bytes\fP bytes aligned to \fBalignment\fP, the process will be aborted.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
This function will abort on failure to allocate memory.
.UNINDENT
.UNINDENT
.SH RETURNS
.sp
A pointer to a memory region which \fIHAS NOT\fP been zeroed.
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017-present, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
