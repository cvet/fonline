.\" Man page generated from reStructuredText.
.
.TH "MONGOC_COLLECTION_ESTIMATED_DOCUMENT_COUNT" "3" "Nov 03, 2021" "1.19.2" "libmongoc"
.SH NAME
mongoc_collection_estimated_document_count \- mongoc_collection_estimated_document_count()
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
int64_t
mongoc_collection_estimated_document_count (mongoc_collection_t *collection,
                                            const bson_t *opts,
                                            const mongoc_read_prefs_t *read_prefs,
                                            bson_t *reply,
                                            bson_error_t *error);
.ft P
.fi
.UNINDENT
.UNINDENT
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBcollection\fP: A \fBmongoc_collection_t\fP\&.
.IP \(bu 2
\fBopts\fP: A \fI\%bson_t\fP, \fBNULL\fP to ignore.
.IP \(bu 2
\fBread_prefs\fP: A \fBmongoc_read_prefs_t\fP or \fBNULL\fP\&.
.IP \(bu 2
\fBreply\fP: A location for an uninitialized \fI\%bson_t\fP to store the command reply, \fBNULL\fP to ignore. If not \fBNULL\fP, \fBreply\fP will be initialized.
.IP \(bu 2
\fBerror\fP: An optional location for a \fBbson_error_t\fP or \fBNULL\fP\&.
.UNINDENT
.sp
\fBopts\fP may be NULL or a BSON document with additional command options:
.INDENT 0.0
.IP \(bu 2
\fBreadConcern\fP: Construct a \fBmongoc_read_concern_t\fP and use \fBmongoc_read_concern_append\fP to add the read concern to \fBopts\fP\&. See the example code for \fBmongoc_client_read_command_with_opts\fP\&. Read concern requires MongoDB 3.2 or later, otherwise an error is returned.
.IP \(bu 2
\fBsessionId\fP: First, construct a \fBmongoc_client_session_t\fP with \fBmongoc_client_start_session\fP\&. You can begin a transaction with \fBmongoc_client_session_start_transaction\fP, optionally with a \fBmongoc_transaction_opt_t\fP that overrides the options inherited from \fBcollection\fP, and use \fBmongoc_client_session_append\fP to add the session to \fBopts\fP\&. See the example code for \fBmongoc_client_session_t\fP\&.
.IP \(bu 2
\fBcollation\fP: Configure textual comparisons. See Setting Collation Order, and \fI\%the MongoDB Manual entry on Collation\fP\&. Collation requires MongoDB 3.2 or later, otherwise an error is returned.
.IP \(bu 2
\fBserverId\fP: To target a specific server, include an int32 "serverId" field. Obtain the id by calling \fBmongoc_client_select_server\fP, then \fBmongoc_server_description_id\fP on its return value.
.IP \(bu 2
\fBskip\fP: An int specifying how many documents matching the \fBquery\fP should be skipped before counting.
.IP \(bu 2
\fBlimit\fP: An int specifying the maximum number of documents to count.
.UNINDENT
.SH DESCRIPTION
.sp
This functions executes a count query on \fBcollection\fP\&. In contrast with \fBmongoc_collection_count_documents()\fP, the count returned is \fInot\fP guaranteed to be accurate.
.sp
This function is considered a retryable read operation.
Upon a transient error (a network error, errors due to replica set failover, etc.) the operation is safely retried once.
If \fBretryreads\fP is false in the URI (see \fBmongoc_uri_t\fP) the retry behavior does not apply.
.SH ERRORS
.sp
Errors are propagated via the \fBerror\fP parameter.
.SH RETURNS
.sp
\-1 on failure, otherwise the number of documents counted.
.SH EXAMPLE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <bson/bson.h>
#include <mongoc/mongoc.h>
#include <stdio.h>

static void
print_count (mongoc_collection_t *collection, bson_t *query)
{
   bson_error_t error;
   int64_t count;
   bson_t* opts = BCON_NEW ("skip", BCON_INT64(5));

   count = mongoc_collection_estimated_document_count (
      collection, opts, NULL, NULL, &error);
   bson_destroy (opts);

   if (count < 0) {
      fprintf (stderr, "Count failed: %s\en", error.message);
   } else {
      printf ("%" PRId64 " documents counted.\en", count);
   }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
.nf
\fBmongoc_collection_count_documents()\fP
.fi
.sp
.UNINDENT
.UNINDENT
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017-present, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
