.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "MONGOC_COLLECTION_DROP_WITH_OPTS" "3" "Aug 31, 2022" "1.23.0" "libmongoc"
.SH NAME
mongoc_collection_drop_with_opts \- mongoc_collection_drop_with_opts()
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
bool
mongoc_collection_drop_with_opts (mongoc_collection_t *collection,
                                  bson_t *opts,
                                  bson_error_t *error);
.ft P
.fi
.UNINDENT
.UNINDENT
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBcollection\fP: A \fI\%mongoc_collection_t\fP\&.
.IP \(bu 2
\fBerror\fP: An optional location for a \fI\%bson_error_t\fP or \fBNULL\fP\&.
.UNINDENT
.sp
\fBopts\fP may be NULL or a BSON document with additional command options:
.INDENT 0.0
.IP \(bu 2
\fBwriteConcern\fP: Construct a \fI\%mongoc_write_concern_t\fP and use \fI\%mongoc_write_concern_append()\fP to add the write concern to \fBopts\fP\&. See the example code for \fI\%mongoc_client_write_command_with_opts()\fP\&.
.IP \(bu 2
\fBsessionId\fP: First, construct a \fI\%mongoc_client_session_t\fP with \fI\%mongoc_client_start_session()\fP\&. You can begin a transaction with \fI\%mongoc_client_session_start_transaction()\fP, optionally with a \fI\%mongoc_transaction_opt_t\fP that overrides the options inherited from \fBcollection\fP, and use \fI\%mongoc_client_session_append()\fP to add the session to \fBopts\fP\&. See the example code for \fI\%mongoc_client_session_t\fP\&.
.IP \(bu 2
\fBcollation\fP: Configure textual comparisons. See \fI\%Setting Collation Order\fP, and \fI\%the MongoDB Manual entry on Collation\fP\&. Collation requires MongoDB 3.2 or later, otherwise an error is returned.
.IP \(bu 2
\fBserverId\fP: To target a specific server, include an int32 \(dqserverId\(dq field. Obtain the id by calling \fI\%mongoc_client_select_server()\fP, then \fI\%mongoc_server_description_id()\fP on its return value.
.UNINDENT
.SH DESCRIPTION
.sp
This function requests that a \fBcollection\fP be dropped, including all indexes associated with the \fBcollection\fP\&.
.sp
If no write concern is provided in \fBopts\fP, the collection\(aqs write concern is used.
.sp
If the collection does not exist, the server responds with an \(dqns not found\(dq error. It is safe to ignore this error; set the \fI\%Error API Version\fP to 2 and ignore server error code 26:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mongoc_client_t *client;
mongoc_collection_t *collection;
bson_error_t error;
bool r;

client = mongoc_client_new (NULL);
mongoc_client_set_error_api (client, 2);
collection = mongoc_client_get_collection (client, \(dqdb\(dq, \(dqcollection\(dq);
r = mongoc_collection_drop_with_opts (collection, NULL /* opts */, &error);
if (r) {
   printf (\(dqDropped.\en\(dq);
} else {
   printf (\(dqError message: %s\en\(dq, error.message);
   if (error.domain == MONGOC_ERROR_SERVER && error.code == 26) {
      printf (\(dqIgnoring \(aqns not found\(aq error\en\(dq);
   } else {
      fprintf (stderr, \(dqUnrecognized error!\en\(dq);
   }
}

mongoc_collection_destroy (collection);
mongoc_client_destroy (client);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
In MongoDB 3.0 and older, the \(dqns not found\(dq error code is the generic MONGOC_ERROR_QUERY_FAILURE; in this case check whether the error message is equal to the string \(dqns not found\(dq.
.sp
The \fBencryptedFields\fP document in \fBopts\fP may be used to create a collection used for \fI\%Using Client\-Side Field Level Encryption\fP\&. If \fBencryptedFields\fP is specified, the \(dqns not found\(dq error is not returned.
.SH ERRORS
.sp
Errors are propagated via the \fBerror\fP parameter.
.SH RETURNS
.sp
Returns true if the collection was successfully dropped. Returns \fBfalse\fP and sets \fBerror\fP if there are invalid arguments or a server or network error.
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017-present, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
