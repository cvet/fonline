.\" Man page generated from reStructuredText.
.
.TH "MONGOC_CLIENT_POOL_MIN_SIZE" "3" "Nov 03, 2021" "1.19.2" "libmongoc"
.SH NAME
mongoc_client_pool_min_size \- mongoc_client_pool_min_size()
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
void
mongoc_client_pool_min_size (mongoc_client_pool_t *pool,
                             uint32_t min_pool_size)
   BSON_GNUC_DEPRECATED;
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This function sets the \fImaximum\fP number of idle clients to be kept in the pool. Any idle clients in excess of the maximum are destroyed. This function is deprecated because its behavior does not match what developers expect from a "minimum pool size", and its actual behavior is likely to hurt performance.
.sp
Applications should not call this function, they should instead accept the default behavior, which is to keep all idle clients that are pushed into the pool.
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBpool\fP: A \fBmongoc_client_pool_t\fP\&.
.IP \(bu 2
\fBmin_pool_size\fP: The number of idle clients to keep in the pool.
.UNINDENT
.SH THREAD SAFETY
.sp
This function is safe to call from multiple threads.
.sp
Subsequent calls to \fBmongoc_client_pool_push\fP respect the new minimum size, and close the least recently used \fBmongoc_client_t\fP if the minimum size is exceeded.
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017-present, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
