.\" Man page generated from reStructuredText.
.
.TH "MONGOC_COLLECTION_COMMAND_SIMPLE" "3" "Nov 03, 2021" "1.19.2" "libmongoc"
.SH NAME
mongoc_collection_command_simple \- mongoc_collection_command_simple()
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
bool
mongoc_collection_command_simple (mongoc_collection_t *collection,
                                  const bson_t *command,
                                  const mongoc_read_prefs_t *read_prefs,
                                  bson_t *reply,
                                  bson_error_t *error);
.ft P
.fi
.UNINDENT
.UNINDENT
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBcollection\fP: A \fBmongoc_collection_t\fP\&.
.IP \(bu 2
\fBcommand\fP: A \fI\%bson_t\fP containing the command to execute.
.IP \(bu 2
\fBread_prefs\fP: An optional \fBmongoc_read_prefs_t\fP\&. Otherwise, the command uses mode \fBMONGOC_READ_PRIMARY\fP\&.
.IP \(bu 2
\fBreply\fP: A location to initialize a \fI\%bson_t\fP\&. This should be on the stack.
.IP \(bu 2
\fBerror\fP: An optional location for a \fBbson_error_t\fP or \fBNULL\fP\&.
.UNINDENT
.SH DESCRIPTION
.sp
This is a simplified version of \fBmongoc_collection_command()\fP that returns the first result document in \fBreply\fP\&. The collection\(aqs read preference, read concern, and write concern are not applied to the command. The parameter \fBreply\fP is initialized even upon failure to simplify memory management.
.sp
This function tries to unwrap an embedded error in the command when possible. The unwrapped error will be propagated via the \fBerror\fP parameter. Additionally, the result document is set in \fBreply\fP\&.
.sp
This function is not considered a retryable read operation.
.SH ERRORS
.sp
Errors are propagated via the \fBerror\fP parameter.
.SH RETURNS
.sp
Returns \fBtrue\fP if successful. Returns \fBfalse\fP and sets \fBerror\fP if there are invalid arguments or a server or network error.
.sp
This function does not check the server response for a write concern error or write concern timeout.
.SH EXAMPLE
.sp
The following is an example of executing the collection stats command.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <bson/bson.h>
#include <mongoc/mongoc.h>
#include <stdio.h>

static void
print_collection_stats (mongoc_collection_t *collection)
{
   bson_error_t error;
   const char *name;
   bson_t *cmd;
   bson_t reply;

   name = mongoc_collection_get_name (collection);
   cmd = BCON_NEW ("collStats", BCON_UTF8 (name));

   if (mongoc_collection_command_simple (
          collection, cmd, NULL, &reply, &error)) {
      str = bson_as_canonical_extended_json (&reply, NULL);
      printf ("%s\en", str);
      bson_free (str);
   } else {
      fprintf (stderr, "%s\en", error.message);
   }

   bson_destroy (&reply);
   bson_destroy (cmd);
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017-present, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
