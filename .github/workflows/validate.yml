name: validate

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  check-formatting:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: ./Source
        extensions: 'h,cpp,fos'
        clangFormatVersion: 12
  unit-tests:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - run: BuildTools/prepare-workspace.sh linux
    - run: BuildTools/validate.sh unit-tests
  code-coverage:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - run: BuildTools/prepare-workspace.sh linux
    - run: BuildTools/validate.sh code-coverage
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        gcov: true
  windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        app:
        - win32-client
        - win64-client
        - win64-server
        - win32-single
        - win64-single
        - win64-editor
        - win64-mapper
        - win64-ascompiler
        - win64-baker
    steps:
    - uses: actions/checkout@v3
    - run: BuildTools/validate.bat ${{ matrix.app }}
  ubuntu:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        app:
        - linux-client
        - linux-gcc-client
        - android-arm-client
        - android-arm64-client
        - web-client
        - linux-server
        - linux-gcc-server
        - linux-single
        - linux-gcc-single
        - android-arm-single
        - android-arm64-single
        - web-single
        - linux-editor
        - linux-gcc-editor
        - linux-mapper
        - linux-gcc-mapper
        - linux-ascompiler
        - linux-gcc-ascompiler
        - linux-baker
        - linux-gcc-baker
    steps:
    - uses: actions/checkout@v3
    - if: ${{ startsWith(matrix.app, 'linux-') }}
      run: BuildTools/prepare-workspace.sh linux
    - if: ${{ startsWith(matrix.app, 'web-') }}
      run: BuildTools/prepare-workspace.sh web
    - if: ${{ startsWith(matrix.app, 'android-arm-') }}
      run: BuildTools/prepare-workspace.sh android
    - if: ${{ startsWith(matrix.app, 'android-arm64-') }}
      run: BuildTools/prepare-workspace.sh android-arm64
    - if: ${{ startsWith(matrix.app, 'android-x86-') }}
      run: BuildTools/prepare-workspace.sh android-x86
    - run: BuildTools/validate.sh ${{ matrix.app }}
  macos:
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        app:
        - mac-client
        - ios-client
        - mac-single
        - ios-single
    steps:
    - uses: actions/checkout@v3
    - run: BuildTools/validate.sh ${{ matrix.app }}
