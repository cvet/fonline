[Effect]

[ShaderCommon]
const float FogBlackout = 0.2;
const float AttackBlackout = 0.4;
const float AttackAroundShining = 0.4;

[VertexShader]
layout(location = 0) uniform mat4 ProjectionMatrix;

layout(location = 0) in vec2 InPosition;
layout(location = 1) in vec2 InTexCoord;

layout(location = 0) out vec2 TexCoord;

void main(void)
{
    gl_Position = ProjectionMatrix * vec4(InPosition, 0.0, 1.0);
    TexCoord = InTexCoord;
}

[FragmentShader]
layout(location = 0) uniform sampler2D ColorMap;

layout(location = 0) in vec2 TexCoord;

layout(location = 0) out vec4 FragColor;

void main(void)
{
    vec4 tex = texture(ColorMap, TexCoord);
    
    float fog = tex.r;
    float attack = tex.g;
    float attackDist = tex.b;
    
    float a = 1.0 - max(fog, FogBlackout);
    if (attackDist > 0.0) {
        a = max(attack * AttackBlackout, a);
        FragColor = vec4(attack - a, 0.0, 0.0, a - max(AttackAroundShining - attackDist, 0.0));
    } else {
        if (a == 0.0) {
            discard;
        }
        FragColor = vec4(0.0, 0.0, 0.0, a);
    }
}
