[Effect]

[VertexShader]
uniform mat4 ProjectionMatrix;

layout(location = 0) in vec2 InPosition;
layout(location = 1) in vec4 InColor;
layout(location = 2) in vec2 InTexCoord;
layout(location = 3) in vec2 InTexEggCoord;

layout(location = 0) out vec4 Color;
layout(location = 1) out vec2 TexCoord;

void main(void)
{
    gl_Position = ProjectionMatrix * vec4(InPosition, 0.0, 1.0);
    Color = InColor;
    TexCoord = InTexCoord;
}

[FragmentShader]
layout(binding = 0) uniform sampler2D ColorMap;
uniform vec4 ColorMapSize;
uniform vec4 SpriteBorder;
uniform float TimeGame;

layout(location = 0) in vec4 Color;
layout(location = 1) in vec2 TexCoord;

layout(location = 0) out vec4 FragColor;

bool CheckPixel(float x, float y)
{
    return texture(ColorMap, vec2(x, y)).a > 0.1;
}

void main(void)
{
    float l = TexCoord.x - ColorMapSize.z;
    float t = TexCoord.y - ColorMapSize.w;
    float r = TexCoord.x + ColorMapSize.z;
    float b = TexCoord.y + ColorMapSize.w;
    
    vec4 border = SpriteBorder;
    if (border.w < border.y) {
        border.yw = border.wy;
    }
    
    bool checkPixelResult = false;
    if (l < border.x) {
        checkPixelResult = CheckPixel(r, TexCoord.y);
    }
    else if (r > border.z) {
        checkPixelResult = CheckPixel(l, TexCoord.y);
    }
    else if (t < border.y) {
        checkPixelResult = CheckPixel(TexCoord.x, b);
    }
    else if (b > border.w) {
        checkPixelResult = CheckPixel(TexCoord.x, t);
    }
    else if (texture(ColorMap, TexCoord).a < 0.1) {
        checkPixelResult = CheckPixel(l, TexCoord.y) || CheckPixel(r, TexCoord.y) ||
            CheckPixel(TexCoord.x, t) || CheckPixel(TexCoord.x, b);
    }
    
    if (checkPixelResult) {
        FragColor = Color;
        
        if (FragColor.a > 0.1) {
            float v = (TexCoord.y - border.y) / (border.w - border.y);
            v += 1.0 - mod(TimeGame, 2.0);
            if (v > 1.0) {
                v = 2.0 - v;
            }
            else if (v < 0.0) {
                v = -v;
            }
            FragColor.rgb += v * 0.60 - 0.30;
            FragColor.rgb = clamp(FragColor.rgb, 0.0, 1.0);
        } else {
            FragColor.a = 1.0;
        }
    }
    else {
        discard;
    }
}
