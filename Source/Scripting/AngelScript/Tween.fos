// FOS Common

class Tween
{
    void Init(int beginX, int beginY, int endX, int endY, uint pixelsPerSecond)
    {
        x1 = beginX;
        y1 = beginY;
        x2 = endX;
        y2 = endY;
        x3 = beginX;
        y3 = beginY;
        end = false;
        pps = pixelsPerSecond;
    }

    void UpdatePos(int newX, int newY)
    {
        x2 = newX;
        y2 = newY;
        x3 = newX;
        y3 = newY;
    }

    void Move(bool toEnd)
    {
        if (end == toEnd)
            return;

        x3 = CurX;
        y3 = CurY;
        end = toEnd;
        startTick = Game.GetTick();
    }

    void ForceMove(bool toEnd)
    {
        end = toEnd;
        x3 = (end ? x2 : x1);
        y3 = (end ? y2 : y1);
    }

    int get_CurX()
    {
        return x3 + Percent * ((end ? x2 : x1) - x3) / 100;
    }

    int get_CurY()
    {
        return y3 + Percent * ((end ? y2 : y1) - y3) / 100;
    }

    int get_Dist()
    {
        return int(math::sqrt(Math::Pow2((end ? x2 : x1) - x3) + Math::Pow2((end ? y2 : y1) - y3)));
    }

    int get_Percent()
    {
        int dist = Dist;
        return dist > 0 ? Math::Min((Game.GetTick() - startTick) * pps / 1000 * 100 / Dist, 100) : 100;
    }

    private
    bool end;
    private
    int x1;
    private
    int y1;
    private
    int x2;
    private
    int y2;
    private
    int x3;
    private
    int y3;
    private
    uint pps;
    private
    uint startTick;
};
