// FOS Common

int Pow2(int x)
{
    return x * x;
}

float Pow2F(float x)
{
    return x * x;
}

int Pow3(int x)
{
    return x * x * x;
}

float Pow3F(float x)
{
    return x * x * x;
}

int Min(int x, int y)
{
    return x < y ? x : y;
}

float MinF(float x, float y)
{
    return x < y ? x : y;
}

int Max(int x, int y)
{
    return x > y ? x : y;
}

float MaxF(float x, float y)
{
    return x > y ? x : y;
}

int Clamp(int x, int min, int max)
{
    return x > max ? max : (x < min ? min : x);
}

float ClampF(float x, float min, float max)
{
    return x > max ? max : (x < min ? min : x);
}

int Abs(int x)
{
    return x > 0 ? x : -x;
}

float AbsF(float x)
{
    return x > 0 ? x : -x;
}

int Distance(int x1, int y1, int x2, int y2)
{
    return int(sqrt(Pow2(x1 - x2) + Pow2(y1 - y2)));
}

float DistanceF(float x1, float y1, float x2, float y2)
{
    return float(sqrt(Pow2F(x1 - x2) + Pow2F(y1 - y2)));
}

bool IsCollision(int x1, int y1, int x2, int y2, int w, int h)
{
    return x1 >= x2 && x1 < x2 + w && y1 >= y2 && y1 < y2 + h;
}

int LbsToGramm(int lbs)
{
    return lbs * 453;
}

int NumericalNumber(int num)
{
    return num % 2 != 0 ? num * num / 2 + 1 : num * num / 2 + num / 2;
}
